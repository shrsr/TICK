[[inputs.cisco_telemetry_mdt]]
  ## Telemetry transport (one of: tcp-dialout, grpc-dialout, grpc-dialin)
  transport = "grpc-dialout"
  
  ## Increase the 4MB gRPC default message size
  max_msg_size = 31457280

  ## For debugging purpose, dump the raw GPB payload
  # dump_raw_input = "/tmp/telegraf/dump"

  ## Enable decoding of NX-OS Telemetry
  decode_nxos = true

  ## Address and port to host telemetry listener on (dialout) or to connect to (dialin)
  service_address = ":50007"

#[[inputs.cisco_telemetry_gnmi]]
  ## Address and port of the GNMI GRPC server
  #service_address = "10.49.234.114:57777"
  
  ## define credentials
  #username = "cisco"
  #password = "cisco"

  ## enable client-side TLS and define CA to authenticate the device
  # tls = true
  # tls_ca = "/etc/telegraf/ca.pem"
  # insecure_skip_verify = true

  ## define client-side TLS certificate & key to authenticate to the device
  # tls_cert = "/etc/telegraf/cert.pem"
  # tls_key = "/etc/telegraf/key.pem"

  #[[inputs.cisco_telemetry_gnmi.subscription]]
  #  origin = "Cisco-IOS-XR-infra-statsd-oper"
  #  path = "infra-statistics/interfaces/interface/latest/generic-counters"

    # Subscription mode (one of: "target_defined", "sample", "on_change") and interval
   # subscription_mode = "sample"
   # sample_interval = "10s"

    ## Suppress redundant transmissions when measured values are unchanged
    # suppress_redundant = false

    ## If suppression is enabled, send updates at least every X seconds anyway
    # heartbeat_interval = "60s"

# Read InfluxDB-formatted JSON metrics from one or more HTTP endpoints

[[inputs.influxdb]]
  ## Works with InfluxDB debug endpoints out of the box,
  ## but other services can use this format too.
  ## See the influxdb plugin's README for more details.

  ## Multiple URLs from which to read InfluxDB-formatted JSON
  ## Default is "http://localhost:8086/debug/vars".
  urls = [
    "http://influxdb:8086/debug/vars"
  ]

  ## Optional TLS Config
  # tls_ca = "/etc/telegraf/ca.pem"
  # tls_cert = "/etc/telegraf/cert.pem"
  # tls_key = "/etc/telegraf/key.pem"
  ## Use TLS but skip chain & host verification
  # insecure_skip_verify = false

  ## http request & header timeout
  timeout = "5s"


#[[outputs.file]]
  ## Ouput the data to a file.
  ## For debugging purpose, consumes significant CPU resources.
  #  files = ["stdout"]

[[outputs.influxdb]]

  urls = ["http://influxdb:8086"]

  ## The target database for metrics; will be created as needed.
  database = "mdt_realtime"

  ## If true, no CREATE DATABASE queries will be sent.  Set to true when using
  ## Telegraf with a user without permissions to create databases or when the
  ## database already exists.
  # skip_database_creation = false

  ## Name of existing retention policy to write to.  Empty string writes to
  ## the default retention policy.  Only takes effect when using HTTP.
  # retention_policy = ""

  ## Write consistency (clusters only), can be: "any", "one", "quorum", "all".
  ## Only takes effect when using HTTP.
  # write_consistency = "any"

  ## Timeout for HTTP messages.
  # timeout = "5s"

  ## HTTP Basic Auth
  username = "admin"
  password = "admin"

  ## HTTP User-Agent
  # user_agent = "telegraf"

  ## UDP payload size is the maximum packet size to send.
  # udp_payload = 512

  ## Optional TLS Config for use on HTTP connections.
  # tls_ca = "/etc/telegraf/ca.pem"
  # tls_cert = "/etc/telegraf/cert.pem"
  # tls_key = "/etc/telegraf/key.pem"
  ## Use TLS but skip chain & host verification
  # insecure_skip_verify = false

  ## HTTP Proxy override, if unset values the standard proxy environment
  ## variables are consulted to determine which proxy, if any, should be used.
  # http_proxy = "http://corporate.proxy:3128"

  ## Additional HTTP headers
  # http_headers = {"X-Special-Header" = "Special-Value"}

  ## HTTP Content-Encoding for write request body, can be set to "gzip" to
  ## compress body or "identity" to apply no encoding.
  # content_encoding = "identity"

  ## When true, Telegraf will output unsigned integers as unsigned values,
  ## i.e.: "42u".  You will need a version of InfluxDB supporting unsigned
  ## integer values.  Enabling this option will result in field type errors if
  ## existing data has been written.
  # influx_uint_support = false

[agent]
  ## Default data collection interval for all inputs
  interval = "10s"
  ## Rounds collection interval to 'interval'
  ## ie, if interval="10s" then always collect on :00, :10, :20, etc.
  round_interval = true

  ## Telegraf debug verbosity level
  # debug = true

  ## Telegraf will send metrics to outputs in batches of at most
  ## metric_batch_size metrics.
  ## This controls the size of writes that Telegraf sends to output plugins.
  metric_batch_size = 10000

  ## For failed writes, telegraf will cache metric_buffer_limit metrics for each
  ## output, and will flush this buffer on a successful write. Oldest metrics
  ## are dropped first when this buffer fills.
  ## This buffer only fills when writes fail to output plugin(s).
  metric_buffer_limit = 100000

  flush_interval = "10s"